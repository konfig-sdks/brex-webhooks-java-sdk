/*
 * Webhooks API
 *  Brex uses webhooks to send real-time notifications when events happen in the accounts that you manage. Use webhook subscriptions to subscribe to different webhook events. 
 *
 * The version of the OpenAPI document: 0.1
 * Contact: developer-access@brex.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets UserAttributes
 */
@JsonAdapter(UserAttributes.Adapter.class)public enum UserAttributes {
  
  STATUS("STATUS"),
  
  MANAGER_ID("MANAGER_ID"),
  
  DEPARTMENT_ID("DEPARTMENT_ID"),
  
  LOCATION_ID("LOCATION_ID");

  private String value;

  UserAttributes(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static UserAttributes fromValue(String value) {
    for (UserAttributes b : UserAttributes.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<UserAttributes> {
    @Override
    public void write(final JsonWriter jsonWriter, final UserAttributes enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public UserAttributes read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return UserAttributes.fromValue(value);
    }
  }
}

